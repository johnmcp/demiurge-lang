func test1() : int { // expected 1
    if (true)
        if (true)
            if (true)
                if (true)
                    return 1;
    return 0
}

func test2() : int { // expected 0
    if (false)
        return 1;
    return 0;
}

func test3() : int { // expected 2
    return 1 + 1;
}

func test4() : int { // expected 0
    return 1-1;
}

func test5() : int { // expected 4
    return 2 * 2;
}

func test6() : int { // expected 2
    return 2 / 1;
}

func test7() : int { // expected 2
    return 2 % 3;
}
func test8() : int { // expected 1
    return 3 % 2;
}

func test9() : int { // expected 1
    if (1==1) return 1;
    return 0;
}
func test10() : int { // expected 0
    if (1!=1) return 1;
    return 0;
}
func test11() : int { // expected 1
    if (1>=1) return 1;
    return 0;
}
func test12() : int { // expected 1
    if (1<=1) return 1;
    return 0;
}
func test13() : int { // expected 0
    if (1>1) return 1;
    return 0;
}
func test14() : int { // expected 0
    if (1<1) return 1;
    return 0;
}

func test15() : int { // expected 0
    if (2==1) return 1;
    return 0;
}
func test16() : int { // expected 1
    if (2!=1) return 1;
    return 0;
}
func test17() : int { // expected 1
    if (2>=1) return 1;
    return 0;
}
func test18() : int { // expected 0
    if (2<=1) return 1;
    return 0;
}
func test19() : int { //expected 1
    if (2>1) return 1;
    return 0;
}
func test20() : int { // expected 0
    if (2<1) return 1;
    return 0;
}




func assert(funcName: string, expected: int, result: int) : int {
    var passfail = "failed";
    if (expected == result)
        passfail = "passed";
    printf("%s : expected: %lld result: %lld - %s\n", funcName, expected, result, passfail);
    return 0;
}

func main() : int {    
    assert("test1", 1, test1());
    assert("test2", 0, test2());
    assert("test3", 2, test3());
    assert("test4", 0, test4());
    assert("test5", 4, test5());
    assert("test6", 2, test6());
    assert("test7", 2, test7());
    assert("test8", 1, test8());
    assert("test9", 1, test9());
    assert("test10", 0, test10());
    assert("test11", 1, test11());
    assert("test12", 1, test12());
    assert("test13", 0, test13());
    assert("test14", 0, test14());
    assert("test15", 0, test15());
    assert("test16", 1, test16());
    assert("test17", 1, test17());
    assert("test18", 0, test18());
    assert("test19", 1, test19());
    assert("test20", 0, test20());
    return 0;
}